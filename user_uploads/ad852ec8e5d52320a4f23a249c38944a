const config = require('config');
const jwt = require('jsonwebtoken');
const Joi = require('@hapi/joi');
const mongoose = require('mongoose');
require('dotenv').config()

const userSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    minlength: 5,
    maxlength: 50
  },
  email: {
    type: String,
    required: true,
    minlength: 5,
    maxlength: 255,
    unique: true
  },
  password: {
    type: String,
    required: true,
    minlength: 5,
    maxlength: 1024
  },

  calorieLimit: {
    type: Number,
    required: true
  },

  foodItems: [],
  
  diet: [],

  isAdmin: Boolean,
});

userSchema.methods.generateAuthToken = function() { 
  const token = jwt.sign({ _id: this._id, name: this.name, email: this.email }, process.env.jwtPrivateKey);
  return token;
}

const User = mongoose.model('User', userSchema);

function validateUser(user) {
  const schema = {
    name: Joi.string().min(5).max(50).required(),
    email: Joi.string().min(5).max(255).required().email(),
    password: Joi.string().min(5).max(255).required(),
    calorieLimit: Joi.number().integer()
  };

  return Joi.validate(user, schema);
}

exports.User = User; 
exports.validate = validateUser;